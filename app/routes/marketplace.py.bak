"""
Backup of original Template Marketplace Routes
This file is a snapshot before we port marketplace logic into TemplateService.
"""

from datetime import datetime
from typing import List, Optional
from fastapi import APIRouter, Depends, HTTPException, status, Request, Query
from sqlalchemy.orm import Session

from database import get_db
from app.models.user import User
from app.utils.security import get_current_active_user
from app.services.template_service import TemplateService
from app.services.audit_service import AuditService

router = APIRouter()


@router.get("/home")
async def get_marketplace_home(
    current_user: User = Depends(get_current_active_user),
    db: Session = Depends(get_db)
):
    from app.services.marketplace_service import TemplateMarketplaceService
    homepage_data = TemplateMarketplaceService.get_marketplace_home(db, current_user.id)
    return homepage_data


@router.get("/search")
async def search_marketplace(
    query: Optional[str] = Query(None, description="Search query"),
    category: Optional[str] = Query(None, description="Filter by category"),
    min_price: Optional[float] = Query(None, ge=0, description="Minimum price filter"),
    max_price: Optional[float] = Query(None, ge=0, description="Maximum price filter"),
    rating: Optional[float] = Query(None, ge=1, le=5, description="Minimum rating filter"),
    sort_by: str = Query("relevance", description="Sort by: relevance, price_low, price_high, rating, popularity, newest"),
    page: int = Query(1, ge=1, description="Page number"),
    per_page: int = Query(20, ge=1, le=100, description="Items per page"),
    current_user: User = Depends(get_current_active_user),
    db: Session = Depends(get_db)
):
    from app.services.marketplace_service import TemplateMarketplaceService
    search_results = TemplateMarketplaceService.search_marketplace(
        db, query, category, min_price, max_price, rating, sort_by, page, per_page, current_user.id
    )

    return search_results
"""
Backup of original Template Marketplace Routes
"""

# Original content backed up during cleanup
